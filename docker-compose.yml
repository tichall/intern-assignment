services:
  app:
    networks:
      - app-network
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
    environment:
      - DATASOURCE_URL=${DATASOURCE_URL}
      - DATASOURCE_USERNAME=${DATASOURCE_USERNAME}
      - DATASOURCE_PASSWORD=${DATASOURCE_PASSWORD}
      - REDIS_HOST=${REDIS_HOST}
      - REDIS_PORT=${REDIS_PORT}
      - JWT_SECRET_KEY=${JWT_SECRET_KEY}
    depends_on:
      mysql:
        condition: service_healthy
      redis:
        condition: service_started

  mysql:
    networks:
      - app-network
    image: mysql:8.0
    container_name: mysql
    ports:
      - "3308:3306"
    environment:
      MYSQL_DATABASE: intern
      MYSQL_USER: ${DATASOURCE_USERNAME}
      MYSQL_PASSWORD: ${DATASOURCE_PASSWORD}
    volumes:
      - mysql_data:/var/lib/mysql
    healthcheck:
      test: [ "CMD", "mysqladmin", "ping", "-h", "localhost" ]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    networks:
      - app-network
    image: redis:latest
    container_name: redis
    ports:
      - "6379:6379"

volumes:
  mysql_data:

networks:
  app-network:
    driver: bridge
